@using MudBlazor
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0" Style="background-color: white; opacity:0.9;">
        <MudImage Src="shift-full.png" Height="18" Class="pe-5" />

        <MudButton Href="/getting-started/installation" Color="@((IsActive("getting-started") ? Color.Warning : Color.Default))" Variant="Variant.Text">Get Started</MudButton>
        <MudButton Href="/" Color="@((IsActive("", true) ? Color.Warning : Color.Default))" Variant="Variant.Text">Docs</MudButton>
        <MudButton Href="/components/shift-blazor" Color="@((IsActive("components") ? Color.Warning : Color.Default))" Variant="Variant.Text">Components</MudButton>
        <MudSpacer />
    </MudAppBar>
    <MudDrawer Open ClipMode="DrawerClipMode.Always" Elevation="0">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool IsActive(string href, bool exact = false)
    {
        var uri = NavigationManager.Uri;
        var relativePath = NavigationManager.ToBaseRelativePath(uri).TrimEnd('/');

        href = href.TrimStart('/');

        if (exact)
        {
            return string.Equals(relativePath, href, StringComparison.OrdinalIgnoreCase);
        }

        return relativePath.StartsWith(href, StringComparison.OrdinalIgnoreCase);
    }
}